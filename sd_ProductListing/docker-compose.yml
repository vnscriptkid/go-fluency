version: '3.8'
services:
  db:
    image: postgres:14.5
    container_name: db
    volumes:
      - ./pg/primary.conf:/var/lib/pg/data/primary.conf
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_REP_USER: repuser
      POSTGRES_REP_PASSWORD: rep_password
      POSTGRES_DB: catalog
    ports:
      - "5433:5432"
    command: >
      bash -c "echo \"CREATE ROLE repuser WITH REPLICATION PASSWORD 'reppassword' LOGIN;\" > /docker-entrypoint-initdb.d/10_create_replication_user.sql
      && docker-entrypoint.sh postgres -c config_file=/var/lib/pg/data/primary.conf"

  replica_1:
    image: postgres:14.5
    container_name: replica_1
    user: root
    volumes:
      - ./pg/replica.conf:/var/lib/pgcfg/data/replica.conf
      - replica_data:/var/lib/pg/data
      - ./pg/replica_entrypoint.sh:/replica_entrypoint.sh
    environment:
      POSTGRES_DB: catalog
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/pg/data/
    entrypoint: ["/bin/bash", "/replica_entrypoint.sh"]

  catalog_app_1:
    build:
      context: ./catalog-svc
      dockerfile: Dockerfile
    container_name: catalog_app_1
    ports:
      - 8091:8080
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_READ_HOST: replica_1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      APP_HOST_PATH: 0.0.0.0
      APP_HOST_PORT: 8080
      APP_INSTANCE: catalog_app_1

  catalog_app_2:
    build:
      context: ./catalog-svc
      dockerfile: Dockerfile
    container_name: catalog_app_2
    ports:
      - 8092:8080
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_READ_HOST: replica_1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      APP_HOST_PATH: 0.0.0.0
      APP_HOST_PORT: 8080
      APP_INSTANCE: catalog_app_2

  catalog_app_3:
    build:
      context: ./catalog-svc
      dockerfile: Dockerfile
    container_name: catalog_app_3
    ports:
      - 8093:8080
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_READ_HOST: replica_1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      APP_HOST_PATH: 0.0.0.0
      APP_HOST_PORT: 8080
      APP_INSTANCE: catalog_app_3

  load_balancer:
    image: nginx:1.24.0
    container_name: load_balancer
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - catalog_app_1
      - catalog_app_2
      - catalog_app_3
    ports:
      - "80:80"

volumes:
  replica_data: